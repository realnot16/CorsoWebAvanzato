{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Desktop\\\\Coding\\\\WebAvanzato\\\\React_Quiz\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n//Questa funzione, date le properties, genera una riga di una domanda\n//daVisualizzare -> testo della domanda\n//statoQuiz -> se il quiz è finito o meno\n//option -> contiene la funzione per aggiornare l'opzione selezionata\n//id -> contiene l'id della domanda\n//check -> vero o falso. Serve per capire se questa è la risposta selezionata. In caso vero, appare il pallino pieno\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Opzione({\n  daVisualizzare,\n  statoQuiz,\n  option,\n  check\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      value: daVisualizzare,\n      onChange: option,\n      disabled: statoQuiz === true,\n      checked: check\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: daVisualizzare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true);\n}\n\n//Questa funzione, date le properties, renderizza la domanda e le 4 risposte.\n// domanda -> contiene il testo della domanda\n// risposte -> è un array contenente le risposte\n// statoQuiz -> vero/falso, indica se il quiz è finito. va passata al componente Opzione\n// option -> contiene la funzione per aggiornare l'opzione selezionata. va passata al componente Opzione\n// id -> contiene l'id della domanda. \n// arrayRisp -> array contenente tutte le risposte del quiz. in combinazione con l'id della domanda,\n//mi permette di verificare se la risposta individuata è uguale a quella passata al componente Opzione\n_c = Opzione;\nfunction Domanda({\n  domanda,\n  risposte,\n  statoQuiz,\n  option,\n  id,\n  arrayRisp\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: domanda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), risposte.map((risposta, i) => {\n      return /*#__PURE__*/_jsxDEV(Opzione, {\n        daVisualizzare: risposta,\n        statoQuiz: statoQuiz,\n        option: option,\n        check: arrayRisp[id] === risposta //Verifico se la risposta associata all'id è uguale a quella in esame.\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true);\n}\n_c2 = Domanda;\nfunction Winner({\n  fine,\n  risposte,\n  data\n}) {\n  if (fine) {\n    var punti = 0;\n    var errori = [];\n    for (var i = 0; i < risposte.length; i++) {\n      console.log(\"CICLO\");\n      console.log(data.domande[i].corretta);\n      console.log(risposte[i]);\n      if (risposte[i] === data.domande[i].corretta) punti++;else errori.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"la domanda \", i + 1, \" \\xE8 sbagliata, la risposta corretta \\xE8: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: data.domande[i].corretta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 88\n        }, this), \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Totalizzati \", punti, \" punti\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), errori.map(errore => {\n        return errore;\n      })]\n    }, void 0, true);\n  }\n}\n_c3 = Winner;\nexport default function Quiz({\n  nquiz\n}) {\n  _s();\n  // UNO STATO PER LE RISPOSTE\n  const [answerArray, SetAnswer] = useState([]);\n  // UNO STATO PER CAPIRE QUALE DOMANDA VISUALIZZARE\n  const [idDomanda, setidDomanda] = useState(0);\n  // UNO STATO PER CAPIRE SE IL QUIZ è TERMINATO\n  const [fine, setFine] = useState(0);\n  // UNO STATO PER MEMORIZZARE LE DOMANDE VISUALIZZATE\n  const [data, setData] = useState();\n\n  // UNO STATO PER CAPIRE SE LA FETCH è CONCLUSA\n  const [loading, setLoading] = useState(true); // Stato per il caricamento\n\n  function svolgimento(nquiz) {\n    if (nquiz > 0) {\n      fetch(\"http://localhost:3001/getDomande/\" + nquiz, {\n        method: \"get\"\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(\"Questions uploaded\");\n        setData(data);\n        setLoading(false); // Imposta lo stato di caricamento a false\n      });\n    }\n  }\n  useEffect(() => svolgimento(nquiz), [nquiz]);\n  //QUESTA FUNZIONE AGGIORNA LA RISPOSTA, QUANDO VIENE CLICCATO UN RADIO BUTTON\n  const onOptionChange = e => {\n    const answ = answerArray.slice();\n    console.log(\"IMPOSTO ANSWER\");\n    console.log(answ);\n    answ[e.target.id - 1] = e.target.value;\n    SetAnswer(answ);\n  };\n\n  // Render condizionale\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 14\n    }, this); // Mostra un indicatore di caricamento\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 14\n    }, this); // Mostra un messaggio di errore se i dati non sono presenti\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Domanda, {\n      id: data.domande[idDomanda].id,\n      domanda: data.domande[idDomanda].domanda,\n      risposte: data.domande[idDomanda].risposte,\n      corretta: data.domande[idDomanda].corretta,\n      statoQuiz: fine,\n      option: onOptionChange,\n      arrayRisp: answerArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Clicca qui per controllare\",\n      onClick: () => {\n        setFine(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"AVANTI\",\n      disabled: idDomanda === data[\"domande\"].length - 1,\n      onClick: () => {\n        setidDomanda(idDomanda + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"INDIETRO\",\n      disabled: idDomanda === 0,\n      onClick: () => {\n        setidDomanda(idDomanda - 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Selected answer \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: answerArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" stato: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: fine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {\n      fine: fine,\n      risposte: answerArray,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"srKAJohzqF2mfx63ALmten4Hys8=\");\n_c4 = Quiz;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Opzione\");\n$RefreshReg$(_c2, \"Domanda\");\n$RefreshReg$(_c3, \"Winner\");\n$RefreshReg$(_c4, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Opzione","daVisualizzare","statoQuiz","option","check","children","type","value","onChange","disabled","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","Domanda","domanda","risposte","id","arrayRisp","map","risposta","i","_c2","Winner","fine","data","punti","errori","length","console","log","domande","corretta","push","errore","_c3","Quiz","nquiz","_s","answerArray","SetAnswer","idDomanda","setidDomanda","setFine","setData","loading","setLoading","svolgimento","fetch","method","then","res","json","onOptionChange","e","answ","slice","target","onClick","_c4","$RefreshReg$"],"sources":["C:/Users/benny/Desktop/Coding/WebAvanzato/React_Quiz/src/Quiz.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n\r\n  //Questa funzione, date le properties, genera una riga di una domanda\r\n  //daVisualizzare -> testo della domanda\r\n  //statoQuiz -> se il quiz è finito o meno\r\n  //option -> contiene la funzione per aggiornare l'opzione selezionata\r\n  //id -> contiene l'id della domanda\r\n  //check -> vero o falso. Serve per capire se questa è la risposta selezionata. In caso vero, appare il pallino pieno\r\n  function Opzione({daVisualizzare,statoQuiz,option, check}){\r\n    return(\r\n    <>\r\n        <input\r\n        type=\"radio\"\r\n        value={daVisualizzare}\r\n        onChange={option}\r\n        disabled={statoQuiz===true}\r\n        checked= {check}\r\n        \r\n      /><label>{daVisualizzare}</label><br/>\r\n    </>)\r\n  }\r\n  \r\n  //Questa funzione, date le properties, renderizza la domanda e le 4 risposte.\r\n  // domanda -> contiene il testo della domanda\r\n  // risposte -> è un array contenente le risposte\r\n  // statoQuiz -> vero/falso, indica se il quiz è finito. va passata al componente Opzione\r\n  // option -> contiene la funzione per aggiornare l'opzione selezionata. va passata al componente Opzione\r\n  // id -> contiene l'id della domanda. \r\n  // arrayRisp -> array contenente tutte le risposte del quiz. in combinazione con l'id della domanda,\r\n                      //mi permette di verificare se la risposta individuata è uguale a quella passata al componente Opzione\r\n  function Domanda({domanda,risposte,statoQuiz,option,id, arrayRisp}){\r\n    return (\r\n      <>\r\n        <p>{domanda}</p>\r\n        {/* map delle risposte. per ogni risposta, creo un componente figlio Opzione */}\r\n        {risposte.map((risposta,i)=>{\r\n          return(\r\n        <Opzione\r\n          key={i}\r\n          daVisualizzare={risposta} \r\n          statoQuiz={statoQuiz}\r\n          option={option}\r\n          check = {arrayRisp[id]===risposta} //Verifico se la risposta associata all'id è uguale a quella in esame.\r\n           />)\r\n      })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  function Winner({fine,risposte,data}){\r\n    if(fine){\r\n    var punti =0\r\n    var errori= []\r\n    \r\n      for (var i=0;i<risposte.length;i++){\r\n        console.log(\"CICLO\")\r\n        console.log(data.domande[i].corretta)\r\n        console.log(risposte[i])\r\n        if (risposte[i]===data.domande[i].corretta)\r\n          punti++;\r\n        else\r\n          errori.push(<p key={i}>la domanda {i+1} è sbagliata, la risposta corretta è: <b>{data.domande[i].corretta}</b> </p>)\r\n      }\r\n      return <>\r\n      <p> Totalizzati {punti} punti</p>\r\n      {errori.map((errore)=> {return errore })}\r\n      </>\r\n    }\r\n  \r\n  \r\n  }\r\n\r\n  export default function Quiz({nquiz}){\r\n\r\n    // UNO STATO PER LE RISPOSTE\r\n    const [answerArray,SetAnswer] = useState([])\r\n    // UNO STATO PER CAPIRE QUALE DOMANDA VISUALIZZARE\r\n    const [idDomanda,setidDomanda] = useState(0)\r\n    // UNO STATO PER CAPIRE SE IL QUIZ è TERMINATO\r\n    const [fine,setFine] = useState(0)\r\n    // UNO STATO PER MEMORIZZARE LE DOMANDE VISUALIZZATE\r\n    const [data,setData] = useState()\r\n\r\n    // UNO STATO PER CAPIRE SE LA FETCH è CONCLUSA\r\n    const [loading, setLoading] = useState(true); // Stato per il caricamento\r\n\r\n    function svolgimento(nquiz) {\r\n      if(nquiz>0){\r\n        fetch(\"http://localhost:3001/getDomande/\"+nquiz,{method: \"get\"}).then((res) => {return res.json();}).then(\r\n                                        (data) => {\r\n                                        console.log(\"Questions uploaded\")\r\n                                        setData(data)\r\n                                        setLoading(false); // Imposta lo stato di caricamento a false\r\n                                      })\r\n      }\r\n    }\r\n\r\n    useEffect(()=>svolgimento(nquiz),[nquiz])\r\n    //QUESTA FUNZIONE AGGIORNA LA RISPOSTA, QUANDO VIENE CLICCATO UN RADIO BUTTON\r\n    const onOptionChange = e => {\r\n        const answ=answerArray.slice()\r\n        console.log(\"IMPOSTO ANSWER\")\r\n        console.log(answ)\r\n        answ[e.target.id-1]=e.target.value\r\n        SetAnswer(answ)\r\n        }\r\n\r\n\r\n    // Render condizionale\r\n    if (loading) {\r\n      return <div>Loading...</div>; // Mostra un indicatore di caricamento\r\n    }\r\n\r\n    if (!data) {\r\n      return <div>Error loading data</div>; // Mostra un messaggio di errore se i dati non sono presenti\r\n    }\r\n\r\n    return <>\r\n\r\n    <Domanda\r\n              id = { data.domande[idDomanda].id}\r\n              domanda={data.domande[idDomanda].domanda} \r\n              risposte={data.domande[idDomanda].risposte} \r\n              corretta={data.domande[idDomanda].corretta}\r\n              statoQuiz={fine}\r\n              option={onOptionChange}\r\n              arrayRisp= {answerArray}\r\n            />\r\n\r\n    <input\r\n              type=\"button\"\r\n              value=\"Clicca qui per controllare\"\r\n              onClick={() => {setFine(true)}} \r\n            />\r\n            <br />\r\n    <input\r\n              type=\"button\"\r\n              value=\"AVANTI\"\r\n              disabled={idDomanda===data[\"domande\"].length-1}\r\n              onClick={() => {setidDomanda(idDomanda+1)}} \r\n            />\r\n    <input\r\n              type=\"button\"\r\n              value=\"INDIETRO\"\r\n              disabled={idDomanda===0}\r\n              onClick={() => {setidDomanda(idDomanda-1)}} \r\n            />\r\n\r\n    <p> Selected answer <strong>{answerArray}</strong></p>\r\n    <p> stato: <strong>{fine}</strong></p>\r\n\r\n    <Winner fine={fine} risposte={answerArray} data={data}/>\r\n    </>\r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}