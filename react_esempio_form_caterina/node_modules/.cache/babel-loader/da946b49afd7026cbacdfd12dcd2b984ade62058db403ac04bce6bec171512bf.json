{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Desktop\\\\Coding\\\\WebAvanzato\\\\Quiz\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dataset = [{\n  \"id\": \"0\",\n  \"domanda\": \"chi è il presidente?\",\n  \"risposte\": [\"meloni\", \"mattarella\", \"salvini\"],\n  \"corretta\": \"meloni\"\n}, {\n  \"id\": \"1\",\n  \"domanda\": \"In quale anno finirà il mondo?\",\n  \"risposte\": [\"2012\", \"2025\", \"1990\"],\n  \"corretta\": \"2012\"\n}, {\n  \"id\": \"2\",\n  \"domanda\": \"di che colore è il sole?\",\n  \"risposte\": [\"giallo\", \"verde\", \"rosso\"],\n  \"corretta\": \"giallo\"\n}];\nfunction Winner({\n  fine,\n  risposta\n}) {\n  if (fine) {\n    if (risposta === \"meloni\") return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" hai indovinato\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);else return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" hai sbagliato\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  }\n}\n_c = Winner;\nfunction Domande({\n  key,\n  domande,\n  index\n}) {\n  return;\n  // return(\n  // <>\n  //   <p>{dataset[id].domanda}</p>\n  //   <input\n  //     type=\"radio\"\n  //     value={dataset[id].risposte[0]}\n  //     checked={answer === dataset[id].risposte[0]}\n  //     onChange={onOptionChange}\n  //     disabled={fine===1}\n  //   /><label>dataset[id].risposte[0]</label><br/>\n\n  //   <input\n  //     type=\"radio\"\n  //     value={dataset[id].risposte[1]}\n  //     checked={answer === dataset[id].risposte[1]}\n  //     onChange={onOptionChange}\n  //     disabled={fine===1}\n  //   /><label>dataset[id].risposte[1]</label><br/>\n\n  //   <input\n  //     type=\"radio\"\n  //     value={dataset[id].risposte[2]}\n  //     checked={answer === dataset[id].risposte[2]}\n  //     onChange={onOptionChange}\n  //     disabled={fine===1}\n  //   /><label>dataset[id].risposte[2]</label><br/>\n  // </>)\n}\n_c2 = Domande;\nexport default function Quiz() {\n  _s();\n  const [answer, SetAnswer] = useState(\"\");\n  const [idDomanda, setidDomanda] = useState(0);\n  const [fine, setFine] = useState(0);\n  const onOptionChange = e => {\n    SetAnswer(e.target.value);\n  };\n  function renderDomanda() {\n    return data.domande.map((domande, index) => /*#__PURE__*/_jsxDEV(Domande, {\n      domande: domande,\n      index: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderDomanda(), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Clicca qui per controllare\",\n      onClick: () => {\n        setFine(1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"AVANTI\",\n      disabled: idDomanda === 2,\n      onClick: () => {\n        setidDomanda(idDomanda + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"INDIETRO\",\n      disabled: idDomanda === 0,\n      onClick: () => {\n        setidDomanda(idDomanda - 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Selected answer \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" stato: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: fine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {\n      fine: fine,\n      risposta: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"sBRkNnBE8q4oiv/XcPeXQEWta1M=\");\n_c3 = Quiz;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Winner\");\n$RefreshReg$(_c2, \"Domande\");\n$RefreshReg$(_c3, \"Quiz\");","map":{"version":3,"names":["useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","dataset","Winner","fine","risposta","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Domande","key","domande","index","_c2","Quiz","_s","answer","SetAnswer","idDomanda","setidDomanda","setFine","onOptionChange","e","target","value","renderDomanda","map","type","onClick","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/benny/Desktop/Coding/WebAvanzato/Quiz/src/Quiz.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nimport data from \"./data.json\";\r\n\r\nconst dataset=[{\r\n  \"id\":\"0\",\r\n  \"domanda\":\"chi è il presidente?\",\r\n  \"risposte\":[\"meloni\",\"mattarella\",\"salvini\"],\r\n  \"corretta\":\"meloni\"\r\n},\r\n{\r\n  \"id\":\"1\",\r\n  \"domanda\":\"In quale anno finirà il mondo?\",\r\n  \"risposte\":[\"2012\",\"2025\",\"1990\"],\r\n  \"corretta\":\"2012\"\r\n},\r\n{\r\n  \"id\":\"2\",\r\n  \"domanda\":\"di che colore è il sole?\",\r\n  \"risposte\":[\"giallo\",\"verde\",\"rosso\"],\r\n  \"corretta\":\"giallo\"\r\n}\r\n]\r\n\r\n\r\n\r\nfunction Winner({fine,risposta}){\r\n  if(fine){\r\n    if(risposta===\"meloni\")\r\n      return <p> hai indovinato</p>\r\n    else\r\n      return <p> hai sbagliato</p>\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction Domande({key,domande,index}){\r\n\r\n  return\r\n  // return(\r\n  // <>\r\n  //   <p>{dataset[id].domanda}</p>\r\n  //   <input\r\n  //     type=\"radio\"\r\n  //     value={dataset[id].risposte[0]}\r\n  //     checked={answer === dataset[id].risposte[0]}\r\n  //     onChange={onOptionChange}\r\n  //     disabled={fine===1}\r\n  //   /><label>dataset[id].risposte[0]</label><br/>\r\n\r\n  //   <input\r\n  //     type=\"radio\"\r\n  //     value={dataset[id].risposte[1]}\r\n  //     checked={answer === dataset[id].risposte[1]}\r\n  //     onChange={onOptionChange}\r\n  //     disabled={fine===1}\r\n  //   /><label>dataset[id].risposte[1]</label><br/>\r\n\r\n  //   <input\r\n  //     type=\"radio\"\r\n  //     value={dataset[id].risposte[2]}\r\n  //     checked={answer === dataset[id].risposte[2]}\r\n  //     onChange={onOptionChange}\r\n  //     disabled={fine===1}\r\n  //   /><label>dataset[id].risposte[2]</label><br/>\r\n  // </>)\r\n}\r\n\r\nexport default function Quiz() {\r\n\r\n  \r\n\r\n  const [answer,SetAnswer] = useState(\"\")\r\n  const [idDomanda,setidDomanda] = useState(0)\r\n  const [fine,setFine] = useState(0)\r\n\r\n  const onOptionChange = e => {\r\n    SetAnswer(e.target.value)\r\n  }\r\n\r\n  function renderDomanda(){\r\n    return data.domande.map((domande,index) => (\r\n      <Domande key={index} domande={domande} index={index} />\r\n\r\n    )\r\n    )\r\n  }\r\n\r\n    return <>\r\n  \r\n    {renderDomanda()}\r\n    <input\r\n      type=\"button\"\r\n      value=\"Clicca qui per controllare\"\r\n      onClick={() => {setFine(1)}} \r\n    />\r\n    <br />\r\n    <input\r\n      type=\"button\"\r\n      value=\"AVANTI\"\r\n      disabled={idDomanda===2}\r\n      onClick={() => {setidDomanda(idDomanda+1)}} \r\n    />\r\n        <input\r\n      type=\"button\"\r\n      value=\"INDIETRO\"\r\n      disabled={idDomanda===0}\r\n      onClick={() => {setidDomanda(idDomanda-1)}} \r\n    />\r\n\r\n    <p> Selected answer <strong>{answer}</strong></p>\r\n    <p> stato: <strong>{fine}</strong></p>\r\n\r\n    <Winner fine={fine} risposta={answer}/>\r\n    \r\n    </>;\r\n  }\r\n  "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,OAAO,GAAC,CAAC;EACb,IAAI,EAAC,GAAG;EACR,SAAS,EAAC,sBAAsB;EAChC,UAAU,EAAC,CAAC,QAAQ,EAAC,YAAY,EAAC,SAAS,CAAC;EAC5C,UAAU,EAAC;AACb,CAAC,EACD;EACE,IAAI,EAAC,GAAG;EACR,SAAS,EAAC,gCAAgC;EAC1C,UAAU,EAAC,CAAC,MAAM,EAAC,MAAM,EAAC,MAAM,CAAC;EACjC,UAAU,EAAC;AACb,CAAC,EACD;EACE,IAAI,EAAC,GAAG;EACR,SAAS,EAAC,0BAA0B;EACpC,UAAU,EAAC,CAAC,QAAQ,EAAC,OAAO,EAAC,OAAO,CAAC;EACrC,UAAU,EAAC;AACb,CAAC,CACA;AAID,SAASC,MAAMA,CAAC;EAACC,IAAI;EAACC;AAAQ,CAAC,EAAC;EAC9B,IAAGD,IAAI,EAAC;IACN,IAAGC,QAAQ,KAAG,QAAQ,EACpB,oBAAON,OAAA;MAAAO,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,MAE7B,oBAAOX,OAAA;MAAAO,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;AAEF;AAACC,EAAA,GARQR,MAAM;AAWf,SAASS,OAAOA,CAAC;EAACC,GAAG;EAACC,OAAO;EAACC;AAAK,CAAC,EAAC;EAEnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACC,GAAA,GA9BQJ,OAAO;AAgChB,eAAe,SAASK,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAI7B,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACyB,SAAS,EAACC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAACmB,OAAO,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAElC,MAAM4B,cAAc,GAAGC,CAAC,IAAI;IAC1BL,SAAS,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,SAASC,aAAaA,CAAA,EAAE;IACtB,OAAO/B,IAAI,CAACiB,OAAO,CAACe,GAAG,CAAC,CAACf,OAAO,EAACC,KAAK,kBACpChB,OAAA,CAACa,OAAO;MAAaE,OAAO,EAAEA,OAAQ;MAACC,KAAK,EAAEA;IAAM,GAAtCA,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmC,CAGxD,CAAC;EACH;EAEE,oBAAOX,OAAA,CAAAE,SAAA;IAAAK,QAAA,GAENsB,aAAa,CAAC,CAAC,eAChB7B,OAAA;MACE+B,IAAI,EAAC,QAAQ;MACbH,KAAK,EAAC,4BAA4B;MAClCI,OAAO,EAAEA,CAAA,KAAM;QAACR,OAAO,CAAC,CAAC,CAAC;MAAA;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFX,OAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNX,OAAA;MACE+B,IAAI,EAAC,QAAQ;MACbH,KAAK,EAAC,QAAQ;MACdK,QAAQ,EAAEX,SAAS,KAAG,CAAE;MACxBU,OAAO,EAAEA,CAAA,KAAM;QAACT,YAAY,CAACD,SAAS,GAAC,CAAC,CAAC;MAAA;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACEX,OAAA;MACF+B,IAAI,EAAC,QAAQ;MACbH,KAAK,EAAC,UAAU;MAChBK,QAAQ,EAAEX,SAAS,KAAG,CAAE;MACxBU,OAAO,EAAEA,CAAA,KAAM;QAACT,YAAY,CAACD,SAAS,GAAC,CAAC,CAAC;MAAA;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAEFX,OAAA;MAAAO,QAAA,GAAG,mBAAiB,eAAAP,OAAA;QAAAO,QAAA,EAASa;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjDX,OAAA;MAAAO,QAAA,GAAG,UAAQ,eAAAP,OAAA;QAAAO,QAAA,EAASF;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEtCX,OAAA,CAACI,MAAM;MAACC,IAAI,EAAEA,IAAK;MAACC,QAAQ,EAAEc;IAAO;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAErC,CAAC;AACL;AAACQ,EAAA,CAhDqBD,IAAI;AAAAgB,GAAA,GAAJhB,IAAI;AAAA,IAAAN,EAAA,EAAAK,GAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}