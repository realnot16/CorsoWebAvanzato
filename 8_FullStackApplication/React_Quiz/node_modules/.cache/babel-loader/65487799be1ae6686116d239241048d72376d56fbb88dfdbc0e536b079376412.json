{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Desktop\\\\Coding\\\\WebAvanzato\\\\React_Quiz\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from \"./data.json\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Winner({\n  fine,\n  risposte\n}) {\n  var punti = 0;\n  var errori = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  if (fine) {\n    for (var i = 0; i < risposte.length; i++) {\n      if (risposte[i] === data.domande[i].corretta) punti++;else errori += /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"la domanda \", i + 1, \" \\xE8 sbagliata, la risposta corretta \\xE8: \", data.domande[i].corretta, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" Totalizzati \", punti, \" punti\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n_c = Winner;\nfunction Opzione({\n  daVisualizzare,\n  statoQuiz,\n  option,\n  id,\n  arrayRisp\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: id,\n      value: daVisualizzare,\n      onChange: option,\n      disabled: statoQuiz === 1,\n      checked: arrayRisp[id] === daVisualizzare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: daVisualizzare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Opzione;\nfunction Domanda({\n  domanda,\n  risposte,\n  statoQuiz,\n  option,\n  id,\n  arrayRisp\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: domanda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), risposte.map(risposta => {\n      return /*#__PURE__*/_jsxDEV(Opzione, {\n        id: id,\n        daVisualizzare: risposta,\n        statoQuiz: statoQuiz,\n        option: option,\n        arrayRisp: arrayRisp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this);\n    })]\n  }, void 0, true);\n}\n_c3 = Domanda;\nexport default function Quiz() {\n  _s();\n  // UNO STATO PER LE RISPOSTE\n  const [answerArray, SetAnswer] = useState([]);\n  // UNO STATO PER CAPIRE QUALE DOMANDA VISUALIZZARE\n  const [idDomanda, setidDomanda] = useState(0);\n  // UNO STATO PER CAPIRE SE IL QUIZ è TERMINATO\n  const [fine, setFine] = useState(0);\n\n  //QUESTA FUNZIONE AGGIORNA LA RISPOSTA, QUANDO VIENE CLICCATO UN RADIO BUTTON\n  const onOptionChange = e => {\n    const answ = answerArray.slice();\n    answ[e.target.id] = e.target.value;\n    SetAnswer(answ);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Domanda, {\n      id: data.domande[idDomanda].id,\n      domanda: data.domande[idDomanda].domanda,\n      risposte: data.domande[idDomanda].risposte,\n      corretta: data.domande[idDomanda].corretta,\n      statoQuiz: fine,\n      option: onOptionChange,\n      arrayRisp: answerArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Clicca qui per controllare\",\n      onClick: () => {\n        setFine(1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"AVANTI\",\n      disabled: idDomanda === 2,\n      onClick: () => {\n        setidDomanda(idDomanda + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"INDIETRO\",\n      disabled: idDomanda === 0,\n      onClick: () => {\n        setidDomanda(idDomanda - 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Selected answer \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: answerArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" stato: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: fine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {\n      fine: fine,\n      risposte: answerArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"mpHBQGQqqtlH03ZvlZ42J3FmSes=\");\n_c4 = Quiz;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Winner\");\n$RefreshReg$(_c2, \"Opzione\");\n$RefreshReg$(_c3, \"Domanda\");\n$RefreshReg$(_c4, \"Quiz\");","map":{"version":3,"names":["useState","data","Fragment","_Fragment","jsxDEV","_jsxDEV","Winner","fine","risposte","punti","errori","i","length","domande","corretta","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Opzione","daVisualizzare","statoQuiz","option","id","arrayRisp","type","value","onChange","disabled","checked","_c2","Domanda","domanda","map","risposta","_c3","Quiz","_s","answerArray","SetAnswer","idDomanda","setidDomanda","setFine","onOptionChange","e","answ","slice","target","onClick","_c4","$RefreshReg$"],"sources":["C:/Users/benny/Desktop/Coding/WebAvanzato/React_Quiz/src/Quiz.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nimport data from \"./data.json\";\r\n\r\n\r\nfunction Winner({fine,risposte}){\r\n  var punti =0\r\n  var errori= <></>\r\n  if(fine){\r\n    for (var i=0;i<risposte.length;i++){\r\n      if (risposte[i]===data.domande[i].corretta)\r\n        punti++;\r\n      else\r\n        errori+=<p>la domanda {i+1} è sbagliata, la risposta corretta è: {data.domande[i].corretta} </p>\r\n    }\r\n  }\r\n  return <p> Totalizzati {punti} punti</p>\r\n\r\n}\r\n\r\nfunction Opzione({daVisualizzare,statoQuiz,option, id, arrayRisp}){\r\n  return(\r\n  <>\r\n      <input\r\n      type=\"radio\"\r\n      id={id}\r\n      value={daVisualizzare}\r\n      onChange={option}\r\n      disabled={statoQuiz===1}\r\n      checked= {arrayRisp[id]===daVisualizzare}\r\n      \r\n    /><label>{daVisualizzare}</label><br/>\r\n  </>)\r\n}\r\n\r\nfunction Domanda({domanda,risposte,statoQuiz,option,id, arrayRisp}){\r\n  return (\r\n    <>\r\n      <p>{domanda}</p>\r\n      {risposte.map((risposta)=>{\r\n        return(\r\n      <Opzione \r\n        id = {id}\r\n        daVisualizzare={risposta} \r\n        statoQuiz={statoQuiz}\r\n        option={option}\r\n        arrayRisp = {arrayRisp}\r\n         />)\r\n    })}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default function Quiz() {\r\n  \r\n\r\n  // UNO STATO PER LE RISPOSTE\r\n  const [answerArray,SetAnswer] = useState([])\r\n  // UNO STATO PER CAPIRE QUALE DOMANDA VISUALIZZARE\r\n  const [idDomanda,setidDomanda] = useState(0)\r\n  // UNO STATO PER CAPIRE SE IL QUIZ è TERMINATO\r\n  const [fine,setFine] = useState(0)\r\n\r\n  //QUESTA FUNZIONE AGGIORNA LA RISPOSTA, QUANDO VIENE CLICCATO UN RADIO BUTTON\r\n  const onOptionChange = e => {\r\n    const answ=answerArray.slice()\r\n    answ[e.target.id]=e.target.value\r\n    SetAnswer(answ)\r\n  }\r\n    \r\n    return <>\r\n  \r\n      <Domanda\r\n        id = { data.domande[idDomanda].id}\r\n        domanda={data.domande[idDomanda].domanda} \r\n        risposte={data.domande[idDomanda].risposte} \r\n        corretta={data.domande[idDomanda].corretta}\r\n        statoQuiz={fine}\r\n        option={onOptionChange}\r\n        arrayRisp= {answerArray}\r\n      />\r\n    \r\n    <input\r\n      type=\"button\"\r\n      value=\"Clicca qui per controllare\"\r\n      onClick={() => {setFine(1)}} \r\n    />\r\n    <br />\r\n    <input\r\n      type=\"button\"\r\n      value=\"AVANTI\"\r\n      disabled={idDomanda===2}\r\n      onClick={() => {setidDomanda(idDomanda+1)}} \r\n    />\r\n        <input\r\n      type=\"button\"\r\n      value=\"INDIETRO\"\r\n      disabled={idDomanda===0}\r\n      onClick={() => {setidDomanda(idDomanda-1)}} \r\n    />\r\n\r\n    <p> Selected answer <strong>{answerArray}</strong></p>\r\n    <p> stato: <strong>{fine}</strong></p>\r\n\r\n    <Winner fine={fine} risposte={answerArray}/>\r\n    \r\n    </>;\r\n  }\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}