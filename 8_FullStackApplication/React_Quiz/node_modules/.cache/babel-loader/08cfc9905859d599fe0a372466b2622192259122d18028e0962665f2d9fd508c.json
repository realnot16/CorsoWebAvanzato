{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Desktop\\\\Coding\\\\WebAvanzato\\\\React_Quiz\\\\src\\\\Fetch.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Fetch() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [count, setCount] = useState(0);\n\n  //CHIAMATA API CON GET\n  useEffect(() => {\n    fetch(\"http://localhost:3001/getQuizList\", {\n      method: \"get\"\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setQuiz(data);\n    });\n  }, []);\n\n  //CHIAMA API CON POST\n  useEffect(() => {\n    var body_post = {\n      email: \"poldi@gmail.com\"\n    };\n    fetch(\"http://localhost:3001/getQuizDone\", {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body_post)\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(\"risultato\" + data[0][\"conteggio\"]);\n      setCount(data[0][\"conteggio\"]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [quiz.map(quiz => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"quiz n: \", quiz.id, \", contiene \", quiz.numeroDomande, \" domande e dura \", quiz.tempoSvolgimento, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"l'utente ha svolto \", count, \" quiz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n// import { useState, useEffect } from 'react';\n// const Fetch = () => {\n//   const [quiz, setQuiz] = useState([]);\n//   useEffect(() => {\n\n//     const user = {\n//         user: \"John Doe\",\n//         password: \"john.doe@example.com\"\n//       };\n\n//     fetch('http://localhost:3000/', {\n//         method: 'post',\n//         headers: {\n//             'Accept': 'application/json',\n//             'Content-Type': 'application/json'\n//           },\n//         body: JSON.stringify( user )\n//     })\n//       .then((res) => {\n//         return res.json();\n//       })\n//       .then((data) => {\n//         console.log(data);\n//         setQuiz(data);\n//       });\n//   }, []);\n//   return (\n//     <div>\n//       {quiz.map((quiz) => (\n//         <>\n//         <p>quiz n: {quiz.id}, contiene {quiz.numeroDomande} domande e dura {quiz.tempoSvolgimento} </p> \n//         </>\n//       ))}\n//     </div>\n//   );\n// };\n// export default Fetch;\n_s(Fetch, \"oQVV7DQ/JVVfLukid8dk5NCmEVI=\");\n_c = Fetch;\nvar _c;\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Fetch","_s","quiz","setQuiz","count","setCount","fetch","method","then","res","json","data","console","log","body_post","email","headers","body","JSON","stringify","children","map","id","numeroDomande","tempoSvolgimento","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/benny/Desktop/Coding/WebAvanzato/React_Quiz/src/Fetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function Fetch() {\r\n  const [quiz, setQuiz] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  //CHIAMATA API CON GET\r\n  useEffect(()=>{\r\n    fetch(\"http://localhost:3001/getQuizList\",{method: \"get\"}).then(\r\n      (res) => {\r\n                return res.json();}).then(\r\n                                    (data) => {\r\n                                    console.log(data);\r\n                                    setQuiz(data) });\r\n  },[])\r\n\r\n  \r\n  //CHIAMA API CON POST\r\n  useEffect(()=>{\r\n    var body_post= {email : \"poldi@gmail.com\"}\r\n    fetch(\"http://localhost:3001/getQuizDone\",{\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n        body: JSON.stringify(body_post)\r\n    }).then(\r\n      (res) => {\r\n                return res.json();}).then(\r\n                                    (data) => {\r\n                                    console.log(\"risultato\"+data[0][\"conteggio\"]);\r\n                                    setCount(data[0][\"conteggio\"]) });\r\n  },[])\r\n\r\n  return(  \r\n    <>\r\n    {quiz.map((quiz)=>{\r\n      return (<>\r\n      <p>quiz n: {quiz.id}, contiene {quiz.numeroDomande} domande e dura {quiz.tempoSvolgimento} </p>\r\n      </>)\r\n    })}\r\n    <p>l'utente ha svolto {count} quiz</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n// import { useState, useEffect } from 'react';\r\n// const Fetch = () => {\r\n//   const [quiz, setQuiz] = useState([]);\r\n//   useEffect(() => {\r\n\r\n//     const user = {\r\n//         user: \"John Doe\",\r\n//         password: \"john.doe@example.com\"\r\n//       };\r\n\r\n//     fetch('http://localhost:3000/', {\r\n//         method: 'post',\r\n//         headers: {\r\n//             'Accept': 'application/json',\r\n//             'Content-Type': 'application/json'\r\n//           },\r\n//         body: JSON.stringify( user )\r\n//     })\r\n//       .then((res) => {\r\n//         return res.json();\r\n//       })\r\n//       .then((data) => {\r\n//         console.log(data);\r\n//         setQuiz(data);\r\n//       });\r\n//   }, []);\r\n//   return (\r\n//     <div>\r\n//       {quiz.map((quiz) => (\r\n//         <>\r\n//         <p>quiz n: {quiz.id}, contiene {quiz.numeroDomande} domande e dura {quiz.tempoSvolgimento} </p> \r\n//         </>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Fetch;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG5C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACAC,SAAS,CAAC,MAAI;IACZW,KAAK,CAAC,mCAAmC,EAAC;MAACC,MAAM,EAAE;IAAK,CAAC,CAAC,CAACC,IAAI,CAC5DC,GAAG,IAAK;MACC,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IAAC,CAAC,CAAC,CAACF,IAAI,CACJG,IAAI,IAAK;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBR,OAAO,CAACQ,IAAI,CAAC;IAAC,CAAC,CAAC;EAClD,CAAC,EAAC,EAAE,CAAC;;EAGL;EACAhB,SAAS,CAAC,MAAI;IACZ,IAAImB,SAAS,GAAE;MAACC,KAAK,EAAG;IAAiB,CAAC;IAC1CT,KAAK,CAAC,mCAAmC,EAAC;MACtCC,MAAM,EAAE,MAAM;MACdS,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAClB,CAAC;MACHC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS;IAClC,CAAC,CAAC,CAACN,IAAI,CACJC,GAAG,IAAK;MACC,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IAAC,CAAC,CAAC,CAACF,IAAI,CACJG,IAAI,IAAK;MACVC,OAAO,CAACC,GAAG,CAAC,WAAW,GAACF,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;MAC7CN,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAAC,CAAC,CAAC;EACnE,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEd,OAAA,CAAAE,SAAA;IAAAqB,QAAA,GACClB,IAAI,CAACmB,GAAG,CAAEnB,IAAI,IAAG;MAChB,oBAAQL,OAAA,CAAAE,SAAA;QAAAqB,QAAA,eACRvB,OAAA;UAAAuB,QAAA,GAAG,UAAQ,EAAClB,IAAI,CAACoB,EAAE,EAAC,aAAW,EAACpB,IAAI,CAACqB,aAAa,EAAC,kBAAgB,EAACrB,IAAI,CAACsB,gBAAgB,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC,gBAC7F,CAAC;IACL,CAAC,CAAC,eACF/B,OAAA;MAAAuB,QAAA,GAAG,qBAAmB,EAAChB,KAAK,EAAC,OAAK;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eACpC,CAAC;AAEP;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA3B,EAAA,CAlFwBD,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}